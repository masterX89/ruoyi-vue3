import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, withModifiers, createVNode, withCtx, createCommentVNode } from "vue";
import { getPrefixCls } from "../_utils/global-config.js";
import IconHover from "../_components/icon-hover.js";
import IconClose from "../icon/icon-close/index.js";
import { isBoolean } from "../_utils/is.js";
import _export_sfc from "../_virtual/plugin-vue_export-helper";
const _sfc_main = defineComponent({
  name: "TabsTab",
  components: {
    IconHover,
    IconClose
  },
  props: {
    tab: {
      type: Object,
      required: true
    },
    isActive: {
      type: Boolean,
      default: false
    },
    editable: Boolean
  },
  emits: ["click", "delete"],
  setup(props, { emit }) {
    const prefixCls = getPrefixCls("tabs-tab");
    const handleClick = (e) => {
      if (!props.tab.disabled) {
        emit("click", props.tab.key, e);
      }
    };
    const handleDelete = (e) => {
      if (!props.tab.disabled) {
        emit("delete", props.tab.key, e);
      }
    };
    const cls = computed(() => [
      prefixCls,
      {
        [`${prefixCls}-active`]: props.isActive,
        [`${prefixCls}-closable`]: props.tab.closable,
        [`${prefixCls}-disabled`]: props.tab.disabled
      }
    ]);
    const showCloseBtn = computed(() => {
      if (isBoolean(props.tab.closable)) {
        return props.tab.closable;
      }
      return props.editable;
    });
    return {
      prefixCls,
      cls,
      showCloseBtn,
      handleClick,
      handleDelete
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_icon_close = resolveComponent("icon-close");
  const _component_icon_hover = resolveComponent("icon-hover");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(_ctx.cls),
    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))
  }, [
    createElementVNode("span", {
      class: normalizeClass(`${_ctx.prefixCls}-title`)
    }, [
      renderSlot(_ctx.$slots, "title")
    ], 2),
    _ctx.editable && _ctx.tab.closable ? (openBlock(), createElementBlock("span", {
      key: 0,
      class: normalizeClass(`${_ctx.prefixCls}-close-btn`),
      onClick: _cache[0] || (_cache[0] = withModifiers((...args) => _ctx.handleDelete && _ctx.handleDelete(...args), ["stop"]))
    }, [
      createVNode(_component_icon_hover, null, {
        default: withCtx(() => [
          createVNode(_component_icon_close)
        ]),
        _: 1
      })
    ], 2)) : createCommentVNode("v-if", true)
  ], 2);
}
var Tab = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { Tab as default };
