import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    activeKey: {
        type: StringConstructor;
        default: undefined;
    };
    defaultActiveKey: {
        type: StringConstructor;
        default: string;
    };
    position: {
        type: PropType<"left" | "right" | "bottom" | "top">;
        default: string;
    };
    size: {
        type: PropType<"small" | "mini" | "medium" | "large">;
        default: string;
    };
    type: {
        type: PropType<string>;
        default: string;
    };
    direction: {
        type: PropType<"horizontal" | "vertical">;
        default: string;
    };
    editable: {
        type: BooleanConstructor;
        default: boolean;
    };
    showAddButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    destroyOnHide: {
        type: BooleanConstructor;
        default: boolean;
    };
    lazyLoad: {
        type: BooleanConstructor;
        default: boolean;
    };
    justify: {
        type: BooleanConstructor;
        default: boolean;
    };
    animation: {
        type: BooleanConstructor;
        default: boolean;
    };
    headerPadding: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "add" | "update:activeKey" | "tabClick" | "delete")[], "change" | "add" | "delete" | "update:activeKey" | "tabClick", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    activeKey?: unknown;
    defaultActiveKey?: unknown;
    position?: unknown;
    size?: unknown;
    type?: unknown;
    direction?: unknown;
    editable?: unknown;
    showAddButton?: unknown;
    destroyOnHide?: unknown;
    lazyLoad?: unknown;
    justify?: unknown;
    animation?: unknown;
    headerPadding?: unknown;
} & {
    size: "small" | "mini" | "medium" | "large";
    direction: "horizontal" | "vertical";
    justify: boolean;
    animation: boolean;
    position: "left" | "right" | "bottom" | "top";
    type: string;
    defaultActiveKey: string;
    editable: boolean;
    showAddButton: boolean;
    destroyOnHide: boolean;
    lazyLoad: boolean;
    headerPadding: boolean;
} & {
    activeKey?: string | undefined;
}> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:activeKey"?: ((...args: any[]) => any) | undefined;
    onAdd?: ((...args: any[]) => any) | undefined;
    onTabClick?: ((...args: any[]) => any) | undefined;
    onDelete?: ((...args: any[]) => any) | undefined;
}, {
    size: "small" | "mini" | "medium" | "large";
    direction: "horizontal" | "vertical";
    justify: boolean;
    animation: boolean;
    position: "left" | "right" | "bottom" | "top";
    type: string;
    activeKey: string;
    defaultActiveKey: string;
    editable: boolean;
    showAddButton: boolean;
    destroyOnHide: boolean;
    lazyLoad: boolean;
    headerPadding: boolean;
}>;
export default _default;
