import { PropType } from 'vue';
import { TabList } from './interface';
declare const _default: import("vue").DefineComponent<{
    direction: {
        type: PropType<"horizontal" | "vertical">;
        required: true;
    };
    type: {
        type: PropType<string>;
        required: true;
    };
    activeTab: {
        type: StringConstructor;
        required: true;
    };
    activeIndex: {
        type: NumberConstructor;
        required: true;
    };
    tabs: {
        type: PropType<TabList>;
        required: true;
    };
    tabKeys: {
        type: PropType<string[]>;
        required: true;
    };
    position: {
        type: StringConstructor;
        required: true;
    };
    size: {
        type: StringConstructor;
        required: true;
    };
    showAddButton: {
        type: BooleanConstructor;
        default: boolean;
    };
    editable: {
        type: BooleanConstructor;
        default: boolean;
    };
    animation: {
        type: BooleanConstructor;
        required: true;
    };
    headerPadding: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("click" | "add" | "delete")[], "add" | "click" | "delete", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    direction?: unknown;
    type?: unknown;
    activeTab?: unknown;
    activeIndex?: unknown;
    tabs?: unknown;
    tabKeys?: unknown;
    position?: unknown;
    size?: unknown;
    showAddButton?: unknown;
    editable?: unknown;
    animation?: unknown;
    headerPadding?: unknown;
} & {
    size: string;
    direction: "horizontal" | "vertical";
    animation: boolean;
    position: string;
    type: string;
    activeIndex: number;
    editable: boolean;
    showAddButton: boolean;
    headerPadding: boolean;
    tabs: TabList;
    activeTab: string;
    tabKeys: string[];
} & {}> & {
    onClick?: ((...args: any[]) => any) | undefined;
    onAdd?: ((...args: any[]) => any) | undefined;
    onDelete?: ((...args: any[]) => any) | undefined;
}, {
    editable: boolean;
    showAddButton: boolean;
    headerPadding: boolean;
}>;
export default _default;
