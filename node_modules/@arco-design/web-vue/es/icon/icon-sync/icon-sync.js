import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode } from "vue";
import { getPrefixCls } from "../../_utils/global-config.js";
import { isNumber } from "../../_utils/is.js";
import _export_sfc from "../../_virtual/plugin-vue_export-helper";
const _sfc_main = defineComponent({
  name: "IconSync",
  props: {
    size: {
      type: [Number, String]
    },
    strokeWidth: {
      type: Number,
      default: 4
    },
    strokeLinecap: {
      type: String,
      default: "butt",
      validator: (value) => {
        return ["butt", "round", "square"].includes(value);
      }
    },
    strokeLinejoin: {
      type: String,
      default: "miter",
      validator: (value) => {
        return ["arcs", "bevel", "miter", "miter-clip", "round"].includes(value);
      }
    },
    spin: Boolean
  },
  setup(props) {
    const prefixCls = getPrefixCls("icon");
    const cls = computed(() => [prefixCls, `${prefixCls}-sync`, { [`${prefixCls}-spin`]: props.spin }]);
    const sizeStyle = computed(() => {
      if (props.size) {
        return {
          fontSize: isNumber(props.size) ? `${props.size}px` : props.size
        };
      }
      return void 0;
    });
    return {
      cls,
      sizeStyle
    };
  }
});
const _hoisted_1 = ["stroke-width", "stroke-linecap", "stroke-linejoin"];
const _hoisted_2 = /* @__PURE__ */ createElementVNode("path", {
  d: "m33.193 11.98 1.414-1.414 1.414-1.415h-2.828v2.829ZM14.812 36.018l-1.415 1.414-1.414 1.414h2.829v-2.828Z",
  fill: "currentColor",
  stroke: "none"
}, null, -1);
const _hoisted_3 = /* @__PURE__ */ createElementVNode("path", { d: "m34.607 10.566 1.414-1.415h-2.828v2.829l1.414-1.414Zm0 0 1.414 1.414c6.64 6.639 6.64 17.403 0 24.042a16.922 16.922 0 0 1-8.942 4.7m-13.682-3.29-1.414 1.414h2.829v-2.828l-1.415 1.414Zm0 0-1.414-1.414c-6.639-6.639-6.639-17.403 0-24.042a16.922 16.922 0 0 1 8.942-4.7" }, null, -1);
const _hoisted_4 = [
  _hoisted_2,
  _hoisted_3
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("svg", {
    viewBox: "0 0 48 48",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    stroke: "currentColor",
    class: normalizeClass(_ctx.cls),
    style: normalizeStyle(_ctx.sizeStyle),
    "stroke-width": _ctx.strokeWidth,
    "stroke-linecap": _ctx.strokeLinecap,
    "stroke-linejoin": _ctx.strokeLinejoin
  }, _hoisted_4, 14, _hoisted_1);
}
var _IconSync = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _IconSync as default };
