import { defineComponent, toRefs, ref, computed, provide, reactive, watch, nextTick, openBlock, createElementBlock, normalizeClass, renderSlot } from "vue";
import { getPrefixCls } from "../_utils/global-config.js";
import { SIZES, DIRECTIONS } from "../_utils/constant.js";
import { RADIO_TYPES, radioGroupKey } from "./context.js";
import _export_sfc from "../_virtual/plugin-vue_export-helper";
const _sfc_main = defineComponent({
  name: "RadioGroup",
  props: {
    modelValue: {
      type: [String, Number, Boolean],
      default: void 0
    },
    defaultValue: {
      type: [String, Number, Boolean],
      default: ""
    },
    type: {
      type: String,
      default: "radio",
      validator: (value) => RADIO_TYPES.includes(value)
    },
    size: {
      type: String,
      default: "medium",
      validator: (value) => SIZES.includes(value)
    },
    direction: {
      type: String,
      default: "horizontal",
      validator: (value) => DIRECTIONS.includes(value)
    },
    disabled: {
      type: Boolean,
      default: false
    },
    onChange: {
      type: [Function, Array]
    }
  },
  emits: [
    "update:modelValue",
    "change"
  ],
  setup(props, { emit }) {
    const prefixCls = getPrefixCls("radio-group");
    const { size, type, disabled, modelValue } = toRefs(props);
    const _value = ref(props.defaultValue);
    const computedValue = computed(() => {
      var _a;
      return (_a = props.modelValue) != null ? _a : _value.value;
    });
    const handleChange = (value, e) => {
      _value.value = value;
      emit("update:modelValue", value);
      nextTick(() => {
        emit("change", value, e);
      });
    };
    provide(radioGroupKey, reactive({
      name: "ArcoRadioGroup",
      value: computedValue,
      size,
      type,
      disabled,
      handleChange
    }));
    watch(computedValue, (cur) => {
      if (_value.value !== cur) {
        _value.value = cur;
      }
    });
    const cls = computed(() => [
      `${prefixCls}${props.type === "button" ? "-button" : ""}`,
      `${prefixCls}-size-${props.size}`,
      `${prefixCls}-direction-${props.direction}`,
      {
        [`${prefixCls}-disabled`]: props.disabled
      }
    ]);
    return {
      prefixCls,
      cls
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("span", {
    class: normalizeClass(_ctx.cls)
  }, [
    renderSlot(_ctx.$slots, "default")
  ], 2);
}
var RadioGroup = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { RadioGroup as default };
