import { CSSProperties } from 'vue';
import { FieldNames, TreeNodeData, TreeProps, TreeNodeKey } from '../tree/interface';
export interface LabelValue {
    value: TreeNodeKey;
    label: string | number;
}
export declare type FilterTreeNode = (searchKey: string, nodeData: TreeNodeData) => boolean;
export interface TreeSelectProps {
    disabled: boolean;
    loading: boolean;
    error: boolean;
    size: 'mini' | 'small' | 'medium' | 'large';
    border: boolean;
    allowClear: boolean;
    allowSearch: boolean;
    retainInputValue: boolean;
    placeholder?: string;
    maxTags?: number;
    multiple: boolean;
    defaultValue?: TreeNodeKey | TreeNodeKey[] | LabelValue | LabelValue[];
    modelValue?: TreeNodeKey | TreeNodeKey[] | LabelValue | LabelValue[];
    fieldNames?: FieldNames;
    data: TreeNodeData[];
    labelInValue: boolean;
    treeCheckable: boolean;
    treeCheckStrictly: boolean;
    treeCheckedStrategy: TreeProps['checkedStrategy'];
    treeProps?: Partial<TreeProps>;
    triggerProps?: Partial<Record<string, any>>;
    popupVisible: boolean | undefined;
    defaultPopupVisible: boolean;
    disableFilter: boolean;
    dropdownStyle?: CSSProperties;
    dropdownClassName?: string | string[];
    filterTreeNode?: FilterTreeNode;
    loadMore?: (nodeData: TreeNodeData) => void;
    onChange?: (value: any) => void;
    onPopupVisibleChange?: (visible: boolean) => void;
    onSearch?: (inputValue: string) => void;
    onClear?: (popupVisible: boolean) => void;
}
