import { PropType } from 'vue';
import { TableColumn, TableData, TableOperationColumn } from './interface';
declare const _default: import("vue").DefineComponent<{
    isSorted: {
        type: BooleanConstructor;
    };
    rowIndex: NumberConstructor;
    record: {
        type: PropType<TableData>;
        default: () => {};
    };
    column: {
        type: PropType<TableColumn>;
        default: () => {};
    };
    type: {
        type: PropType<"expand" | "normal" | "checkbox" | "radio" | "operation">;
        default: string;
    };
    operations: {
        type: PropType<TableOperationColumn[]>;
        default: () => never[];
    };
    dataColumns: {
        type: PropType<TableColumn[]>;
        default: () => never[];
    };
    colSpan: {
        type: NumberConstructor;
        default: number;
    };
    rowSpan: {
        type: NumberConstructor;
        default: number;
    };
    isFixedExpand: {
        type: BooleanConstructor;
        default: boolean;
    };
    containerWidth: {
        type: NumberConstructor;
    };
    showExpandBtn: {
        type: BooleanConstructor;
        default: boolean;
    };
    indentSize: {
        type: NumberConstructor;
        default: number;
    };
    loadMore: PropType<(record: TableData, done: (children: TableData[]) => void) => void>;
    addLazyLoadData: PropType<(children: TableData[] | undefined, record: TableData) => void>;
    renderExpandBtn: {
        type: FunctionConstructor;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    isSorted?: unknown;
    rowIndex?: unknown;
    record?: unknown;
    column?: unknown;
    type?: unknown;
    operations?: unknown;
    dataColumns?: unknown;
    colSpan?: unknown;
    rowSpan?: unknown;
    isFixedExpand?: unknown;
    containerWidth?: unknown;
    showExpandBtn?: unknown;
    indentSize?: unknown;
    loadMore?: unknown;
    addLazyLoadData?: unknown;
    renderExpandBtn?: unknown;
} & {
    column: TableColumn;
    type: "expand" | "normal" | "checkbox" | "radio" | "operation";
    indentSize: number;
    operations: TableOperationColumn[];
    dataColumns: TableColumn[];
    isSorted: boolean;
    record: TableData;
    colSpan: number;
    rowSpan: number;
    isFixedExpand: boolean;
    showExpandBtn: boolean;
} & {
    loadMore?: ((record: TableData, done: (children: TableData[]) => void) => void) | undefined;
    rowIndex?: number | undefined;
    containerWidth?: number | undefined;
    addLazyLoadData?: ((children: TableData[] | undefined, record: TableData) => void) | undefined;
    renderExpandBtn?: Function | undefined;
}>, {
    column: TableColumn;
    type: "expand" | "normal" | "checkbox" | "radio" | "operation";
    indentSize: number;
    operations: TableOperationColumn[];
    dataColumns: TableColumn[];
    isSorted: boolean;
    record: TableData;
    colSpan: number;
    rowSpan: number;
    isFixedExpand: boolean;
    showExpandBtn: boolean;
}>;
export default _default;
