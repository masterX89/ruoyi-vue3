import { defineComponent, computed, createVNode } from "vue";
import { getOperationStyle, getOperationFixedCls } from "./utils.js";
import { getPrefixCls } from "../_utils/global-config.js";
import Checkbox from "../checkbox/index.js";
var OperationTh = defineComponent({
  name: "OperationTh",
  props: {
    operationColumn: {
      type: Object,
      required: true
    },
    operations: {
      type: Array,
      required: true
    },
    isRadio: {
      type: Boolean
    },
    rowSelection: {
      type: Object
    },
    expandable: {
      type: Object
    },
    selectedNumber: {
      type: Number,
      default: 0
    },
    totalNumber: {
      type: Number,
      default: 0
    },
    rowSpan: {
      type: Number,
      default: 1
    },
    totalEnabledNumber: {
      type: Number,
      default: 0
    }
  },
  emits: ["selectAll"],
  setup(props, {
    emit
  }) {
    const prefixCls = getPrefixCls("table");
    const renderContent = () => {
      var _a, _b, _c, _d, _e, _f;
      if (props.operationColumn.name === "selection") {
        if ((_a = props.rowSelection) == null ? void 0 : _a.showCheckedAll) {
          const checked = props.totalNumber > 0 && props.selectedNumber >= props.totalEnabledNumber;
          const indeterminate = props.selectedNumber > 0 && props.selectedNumber < props.totalEnabledNumber;
          return createVNode(Checkbox, {
            "modelValue": checked,
            "indeterminate": indeterminate,
            "uninjectGroupContext": true,
            "onChange": (value) => emit("selectAll", value)
          }, {
            default: ((_b = props.rowSelection) == null ? void 0 : _b.title) ? props.rowSelection.title : void 0
          });
        }
        return (_d = (_c = props.rowSelection) == null ? void 0 : _c.title) != null ? _d : "";
      }
      return (_f = (_e = props.expandable) == null ? void 0 : _e.title) != null ? _f : "";
    };
    const style = computed(() => getOperationStyle(props.operationColumn, props.operations));
    const cls = computed(() => [`${prefixCls}-th`, `${prefixCls}-operation`, {
      [`${prefixCls}-checkbox`]: props.operationColumn.name === "selection" && !props.isRadio,
      [`${prefixCls}-radio`]: props.operationColumn.name === "selection" && props.isRadio,
      [`${prefixCls}-expand`]: props.operationColumn.name === "expand"
    }, ...getOperationFixedCls(prefixCls, props.operationColumn)]);
    return () => createVNode("th", {
      "class": cls.value,
      "style": style.value,
      "rowspan": props.rowSpan > 1 ? props.rowSpan : void 0
    }, [createVNode("span", {
      "class": `${prefixCls}-cell`
    }, [renderContent()])]);
  }
});
export { OperationTh as default };
