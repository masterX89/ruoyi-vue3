import { computed } from "vue";
const useColumnSorter = (props, emit) => {
  const { dataIndex, sortable } = props.column;
  const hasSorter = computed(() => {
    var _a;
    return Boolean((_a = sortable == null ? void 0 : sortable.sortDirections) == null ? void 0 : _a.length);
  });
  const hasAscendBtn = computed(() => {
    var _a, _b;
    return (_b = (_a = sortable == null ? void 0 : sortable.sortDirections) == null ? void 0 : _a.includes("ascend")) != null ? _b : false;
  });
  const hasDescendBtn = computed(() => {
    var _a, _b;
    return (_b = (_a = sortable == null ? void 0 : sortable.sortDirections) == null ? void 0 : _a.includes("descend")) != null ? _b : false;
  });
  const nextSortOrder = computed(() => {
    var _a, _b, _c, _d;
    if (!props.sortOrder) {
      return (_b = (_a = sortable == null ? void 0 : sortable.sortDirections) == null ? void 0 : _a[0]) != null ? _b : "";
    }
    if (props.sortOrder === ((_c = sortable == null ? void 0 : sortable.sortDirections) == null ? void 0 : _c[0])) {
      return (_d = sortable == null ? void 0 : sortable.sortDirections[1]) != null ? _d : "";
    }
    return "";
  });
  const handleClickSorter = (e) => {
    emit("sorterChange", dataIndex, nextSortOrder.value, e);
  };
  return {
    hasSorter,
    hasAscendBtn,
    hasDescendBtn,
    nextSortOrder,
    handleClickSorter
  };
};
export { useColumnSorter };
