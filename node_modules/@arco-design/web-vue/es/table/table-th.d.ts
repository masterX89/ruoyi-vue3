import { PropType } from 'vue';
import { TableCell, TableColumn, TableOperationColumn } from './interface';
declare const _default: import("vue").DefineComponent<{
    column: {
        type: PropType<TableCell>;
        default: () => {};
    };
    operations: {
        type: PropType<TableOperationColumn[]>;
        default: () => never[];
    };
    dataColumns: {
        type: PropType<TableColumn[]>;
        default: () => never[];
    };
    sortOrder: {
        type: StringConstructor;
    };
    filterValue: {
        type: PropType<string[]>;
    };
    filterIconAlignLeft: {
        type: BooleanConstructor;
        default: boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("sorterChange" | "filterChange")[], "sorterChange" | "filterChange", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    column?: unknown;
    operations?: unknown;
    dataColumns?: unknown;
    sortOrder?: unknown;
    filterValue?: unknown;
    filterIconAlignLeft?: unknown;
} & {
    column: TableCell;
    filterIconAlignLeft: boolean;
    operations: TableOperationColumn[];
    dataColumns: TableColumn[];
} & {
    sortOrder?: string | undefined;
    filterValue?: string[] | undefined;
}> & {
    onSorterChange?: ((...args: any[]) => any) | undefined;
    onFilterChange?: ((...args: any[]) => any) | undefined;
}, {
    column: TableCell;
    filterIconAlignLeft: boolean;
    operations: TableOperationColumn[];
    dataColumns: TableColumn[];
}>;
export default _default;
