import { RenderFunction } from 'vue';
import { RenderContent } from '../_utils/types';
import { MessageType } from '../_utils/constant';
export declare const MESSAGE_POSITION: readonly ["top", "bottom"];
export declare type MessagePosition = typeof MESSAGE_POSITION[number];
export interface MessageMethod {
    info: (config: string | MessageConfig) => MessageReturn;
    success: (config: string | MessageConfig) => MessageReturn;
    warning: (config: string | MessageConfig) => MessageReturn;
    error: (config: string | MessageConfig) => MessageReturn;
    loading: (config: string | MessageConfig) => MessageReturn;
    clear: (position?: MessagePosition) => void;
}
export interface MessageConfig {
    content: RenderContent;
    id?: string;
    icon?: RenderFunction;
    position?: MessagePosition;
    showIcon?: boolean;
    closable?: boolean;
    duration?: number;
    onClose?: (id: number | string) => void;
}
export interface MessageReturn {
    close: () => void;
}
export interface MessageItem {
    id: number | string;
    content: RenderContent;
    type?: MessageType | 'loading';
    icon?: RenderFunction;
    showIcon?: boolean;
    closable?: boolean;
    duration?: number;
    resetOnUpdate?: boolean;
    onClose?: (id: number | string) => void;
}
