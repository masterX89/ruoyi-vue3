import { PropType } from 'vue';
import { GridRowGutter } from './interface';
declare const _default: import("vue").DefineComponent<{
    gutter: {
        type: PropType<number | Partial<Record<"xxl" | "xl" | "lg" | "md" | "sm" | "xs", number>> | GridRowGutter[]>;
        default: number;
    };
    justify: {
        type: StringConstructor;
        validator: (value: string) => boolean;
        default: string;
    };
    align: {
        type: StringConstructor;
        validator: (value: string) => boolean;
        default: string;
    };
    div: {
        type: BooleanConstructor;
    };
    wrap: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    classNames: import("vue").ComputedRef<{
        [x: string]: string | boolean;
    }>;
    styles: import("vue").ComputedRef<{
        marginTop?: string | undefined;
        marginBottom?: string | undefined;
        marginLeft?: string | undefined;
        marginRight?: string | undefined;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    gutter?: unknown;
    justify?: unknown;
    align?: unknown;
    div?: unknown;
    wrap?: unknown;
} & {
    div: boolean;
    wrap: boolean;
    justify: string;
    gutter: number | Partial<Record<"xxl" | "xl" | "lg" | "md" | "sm" | "xs", number>> | GridRowGutter[];
    align: string;
} & {}>, {
    div: boolean;
    wrap: boolean;
    justify: string;
    gutter: number | Partial<Record<"xxl" | "xl" | "lg" | "md" | "sm" | "xs", number>> | GridRowGutter[];
    align: string;
}>;
export default _default;
