declare const _default: import("vue").DefineComponent<{
    editable: BooleanConstructor;
    copyable: BooleanConstructor;
    expandable: BooleanConstructor;
    isCopied: BooleanConstructor;
    isEllipsis: BooleanConstructor;
    expanded: BooleanConstructor;
    forceRenderExpand: BooleanConstructor;
}, {
    prefixCls: string;
    showExpand: import("vue").ComputedRef<boolean>;
    t: (key: string, ...args: any[]) => string;
    onEditClick(): void;
    onCopyClick(): void;
    onExpandClick(): void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("copy" | "expand" | "edit")[], "copy" | "expand" | "edit", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    editable?: unknown;
    copyable?: unknown;
    expandable?: unknown;
    isCopied?: unknown;
    isEllipsis?: unknown;
    expanded?: unknown;
    forceRenderExpand?: unknown;
} & {
    expanded: boolean;
    expandable: boolean;
    editable: boolean;
    copyable: boolean;
    isEllipsis: boolean;
    isCopied: boolean;
    forceRenderExpand: boolean;
} & {}> & {
    onCopy?: ((...args: any[]) => any) | undefined;
    onExpand?: ((...args: any[]) => any) | undefined;
    onEdit?: ((...args: any[]) => any) | undefined;
}, {
    expanded: boolean;
    expandable: boolean;
    editable: boolean;
    copyable: boolean;
    isEllipsis: boolean;
    isCopied: boolean;
    forceRenderExpand: boolean;
}>;
export default _default;
