import { PropType } from 'vue';
import { ScrollIntoViewOptions } from '../_components/virtual-list/interface';
declare const _default: import("vue").DefineComponent<{
    data: {
        type: PropType<any[]>;
    };
    size: {
        type: PropType<"small" | "medium" | "large">;
        default: string;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    split: {
        type: BooleanConstructor;
        default: boolean;
    };
    loading: {
        type: BooleanConstructor;
        default: boolean;
    };
    hoverable: {
        type: BooleanConstructor;
        default: boolean;
    };
    paginationProps: {
        type: PropType<Partial<{
            disabled: boolean;
            size: "small" | "mini" | "medium" | "large";
            defaultCurrent: number;
            defaultPageSize: number;
            hideOnSinglePage: boolean;
            simple: boolean;
            showTotal: boolean;
            showMore: boolean;
            showJumper: boolean;
            showPageSize: boolean;
            pageSizeOptions: number[];
            baseSize: number;
            bufferSize: number;
        }> & Omit<Readonly<{
            total?: unknown;
            current?: unknown;
            defaultCurrent?: unknown;
            pageSize?: unknown;
            defaultPageSize?: unknown;
            disabled?: unknown;
            hideOnSinglePage?: unknown;
            simple?: unknown;
            showTotal?: unknown;
            showMore?: unknown;
            showJumper?: unknown;
            showPageSize?: unknown;
            pageSizeOptions?: unknown;
            pageSizeProps?: unknown;
            size?: unknown;
            pageItemStyle?: unknown;
            activePageItemStyle?: unknown;
            baseSize?: unknown;
            bufferSize?: unknown;
            onChange?: unknown;
            onPageSizeChange?: unknown;
        } & {
            disabled: boolean;
            size: "small" | "mini" | "medium" | "large";
            total: number;
            defaultCurrent: number;
            defaultPageSize: number;
            hideOnSinglePage: boolean;
            simple: boolean;
            showTotal: boolean;
            showMore: boolean;
            showJumper: boolean;
            showPageSize: boolean;
            pageSizeOptions: number[];
            baseSize: number;
            bufferSize: number;
        } & {
            onChange?: import("../_utils/types").EmitType<(value: number) => void> | undefined;
            current?: number | undefined;
            onPageSizeChange?: import("../_utils/types").EmitType<(value: number) => void> | undefined;
            pageSize?: number | undefined;
            pageSizeProps?: unknown;
            pageItemStyle?: import("vue").CSSProperties | undefined;
            activePageItemStyle?: import("vue").CSSProperties | undefined;
        }> & {
            onChange?: ((...args: any[]) => any) | undefined;
            "onUpdate:current"?: ((...args: any[]) => any) | undefined;
            onPageSizeChange?: ((...args: any[]) => any) | undefined;
            "onUpdate:pageSize"?: ((...args: any[]) => any) | undefined;
        } & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, "disabled" | "size" | "defaultCurrent" | "defaultPageSize" | "hideOnSinglePage" | "simple" | "showTotal" | "showMore" | "showJumper" | "showPageSize" | "pageSizeOptions" | "baseSize" | "bufferSize">>;
    };
    gridProps: {
        type: ObjectConstructor;
    };
    maxHeight: {
        type: NumberConstructor;
        default: number;
    };
    bottomOffset: {
        type: NumberConstructor;
        default: number;
    };
    virtualListProps: {
        type: ObjectConstructor;
    };
}, {
    virtualListRef: import("vue").Ref<any>;
    renderList: () => JSX.Element;
}, unknown, {}, {
    scrollIntoView(options: ScrollIntoViewOptions): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("scroll" | "reachBottom" | "pageChange" | "pageSizeChange")[], "scroll" | "reachBottom" | "pageChange" | "pageSizeChange", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    data?: unknown;
    size?: unknown;
    bordered?: unknown;
    split?: unknown;
    loading?: unknown;
    hoverable?: unknown;
    paginationProps?: unknown;
    gridProps?: unknown;
    maxHeight?: unknown;
    bottomOffset?: unknown;
    virtualListProps?: unknown;
} & {
    size: "small" | "medium" | "large";
    loading: boolean;
    bottomOffset: number;
    bordered: boolean;
    maxHeight: number;
    hoverable: boolean;
    split: boolean;
} & {
    data?: any[] | undefined;
    paginationProps?: (Partial<{
        disabled: boolean;
        size: "small" | "mini" | "medium" | "large";
        defaultCurrent: number;
        defaultPageSize: number;
        hideOnSinglePage: boolean;
        simple: boolean;
        showTotal: boolean;
        showMore: boolean;
        showJumper: boolean;
        showPageSize: boolean;
        pageSizeOptions: number[];
        baseSize: number;
        bufferSize: number;
    }> & Omit<Readonly<{
        total?: unknown;
        current?: unknown;
        defaultCurrent?: unknown;
        pageSize?: unknown;
        defaultPageSize?: unknown;
        disabled?: unknown;
        hideOnSinglePage?: unknown;
        simple?: unknown;
        showTotal?: unknown;
        showMore?: unknown;
        showJumper?: unknown;
        showPageSize?: unknown;
        pageSizeOptions?: unknown;
        pageSizeProps?: unknown;
        size?: unknown;
        pageItemStyle?: unknown;
        activePageItemStyle?: unknown;
        baseSize?: unknown;
        bufferSize?: unknown;
        onChange?: unknown;
        onPageSizeChange?: unknown;
    } & {
        disabled: boolean;
        size: "small" | "mini" | "medium" | "large";
        total: number;
        defaultCurrent: number;
        defaultPageSize: number;
        hideOnSinglePage: boolean;
        simple: boolean;
        showTotal: boolean;
        showMore: boolean;
        showJumper: boolean;
        showPageSize: boolean;
        pageSizeOptions: number[];
        baseSize: number;
        bufferSize: number;
    } & {
        onChange?: import("../_utils/types").EmitType<(value: number) => void> | undefined;
        current?: number | undefined;
        onPageSizeChange?: import("../_utils/types").EmitType<(value: number) => void> | undefined;
        pageSize?: number | undefined;
        pageSizeProps?: unknown;
        pageItemStyle?: import("vue").CSSProperties | undefined;
        activePageItemStyle?: import("vue").CSSProperties | undefined;
    }> & {
        onChange?: ((...args: any[]) => any) | undefined;
        "onUpdate:current"?: ((...args: any[]) => any) | undefined;
        onPageSizeChange?: ((...args: any[]) => any) | undefined;
        "onUpdate:pageSize"?: ((...args: any[]) => any) | undefined;
    } & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, "disabled" | "size" | "defaultCurrent" | "defaultPageSize" | "hideOnSinglePage" | "simple" | "showTotal" | "showMore" | "showJumper" | "showPageSize" | "pageSizeOptions" | "baseSize" | "bufferSize">) | undefined;
    gridProps?: Record<string, any> | undefined;
    virtualListProps?: Record<string, any> | undefined;
}> & {
    onScroll?: ((...args: any[]) => any) | undefined;
    onReachBottom?: ((...args: any[]) => any) | undefined;
    onPageSizeChange?: ((...args: any[]) => any) | undefined;
    onPageChange?: ((...args: any[]) => any) | undefined;
}, {
    size: "small" | "medium" | "large";
    loading: boolean;
    bottomOffset: number;
    bordered: boolean;
    maxHeight: number;
    hoverable: boolean;
    split: boolean;
}>;
export default _default;
