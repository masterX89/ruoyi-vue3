import type { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    popupVisible: {
        type: BooleanConstructor;
        default: undefined;
    };
    defaultPopupVisible: {
        type: BooleanConstructor;
        default: boolean;
    };
    trigger: {
        type: PropType<"focus" | "click" | "hover" | "contextMenu">;
        default: string;
    };
    position: {
        type: PropType<"br" | "tr" | "bottom" | "top" | "tl" | "bl">;
        default: string;
    };
    popupContainer: {
        type: PropType<string | HTMLElement | null | undefined>;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("select" | "update:popupVisible" | "popupVisibleChange")[], "select" | "update:popupVisible" | "popupVisibleChange", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    popupVisible?: unknown;
    defaultPopupVisible?: unknown;
    trigger?: unknown;
    position?: unknown;
    popupContainer?: unknown;
} & {
    position: "br" | "tr" | "bottom" | "top" | "tl" | "bl";
    defaultPopupVisible: boolean;
    trigger: "focus" | "click" | "hover" | "contextMenu";
} & {
    popupContainer?: string | HTMLElement | null | undefined;
    popupVisible?: boolean | undefined;
}> & {
    onSelect?: ((...args: any[]) => any) | undefined;
    "onUpdate:popupVisible"?: ((...args: any[]) => any) | undefined;
    onPopupVisibleChange?: ((...args: any[]) => any) | undefined;
}, {
    position: "br" | "tr" | "bottom" | "top" | "tl" | "bl";
    popupVisible: boolean;
    defaultPopupVisible: boolean;
    trigger: "focus" | "click" | "hover" | "contextMenu";
}>;
export default _default;
