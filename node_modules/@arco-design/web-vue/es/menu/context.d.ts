import { InjectionKey, VNodeTypes } from 'vue';
import { MenuData, MenuProps } from './interface';
export declare const MenuInjectionKey: InjectionKey<MenuContext>;
export declare type MenuContext = Readonly<Pick<MenuProps, 'mode' | 'theme' | 'levelIndent' | 'autoScrollIntoView' | 'scrollConfig' | 'inTrigger' | 'triggerProps' | 'tooltipProps'> & {
    selectedKeys: string[];
    openKeys: string[];
    prefixCls: string;
    collapsed: boolean;
    expandIconDown?: () => VNodeTypes;
    expandIconRight?: () => VNodeTypes;
    onSubMenuClick?: (key: string, level: number) => void;
    onMenuItemClick?: (key: string) => void;
}>;
export declare const LevelInjectionKey: InjectionKey<LevelContext>;
export declare type LevelContext = Readonly<{
    level: number;
}>;
export declare type MenuMapType = Map<string, string[]>;
export declare const DataCollectorInjectionKey: InjectionKey<DataCollectorContext>;
export declare type DataCollectorContext = Readonly<{
    collectSubMenu: (key: string, children: MenuData) => void;
    removeSubMenu: (key: string) => void;
    collectMenuItem: (key: string) => void;
    removeMenuItem: (keys: string) => void;
    reportMenuData: (data: MenuData) => void;
}>;
