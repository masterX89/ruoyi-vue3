import { PropType } from 'vue';
import { SubMenuProps } from './interface';
declare const _default: import("vue").DefineComponent<{
    key: {
        type: StringConstructor;
    };
    title: {
        type: StringConstructor;
    };
    selectable: {
        type: BooleanConstructor;
    };
    popup: {
        type: PropType<boolean | ((level: number) => boolean)>;
        default: boolean;
    };
}, {
    subMenuKeys: import("vue").ComputedRef<string[]>;
    menuItemKeys: import("vue").ComputedRef<string[]>;
    isChildrenSelected: import("vue").ComputedRef<boolean>;
    props: SubMenuProps;
    attrs: {
        [x: string]: unknown;
    };
    computedKey: import("vue").ComputedRef<string>;
    computedPopup: import("vue").ComputedRef<boolean>;
    expandIconDown: import("vue").Ref<(() => import("vue").VNodeTypes) | undefined>;
    expandIconRight: import("vue").Ref<(() => import("vue").VNodeTypes) | undefined>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    key?: unknown;
    title?: unknown;
    selectable?: unknown;
    popup?: unknown;
} & {
    selectable: boolean;
    popup: boolean | ((level: number) => boolean);
} & {
    title?: string | undefined;
    key?: string | undefined;
}>, {
    selectable: boolean;
    popup: boolean | ((level: number) => boolean);
}>;
export default _default;
