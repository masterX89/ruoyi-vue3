import type { PropType, CSSProperties } from 'vue';
import type { EmitType } from '../_utils/types';
declare const _default: import("vue").DefineComponent<{
    total: {
        type: NumberConstructor;
        required: true;
    };
    current: NumberConstructor;
    defaultCurrent: {
        type: NumberConstructor;
        default: number;
    };
    pageSize: NumberConstructor;
    defaultPageSize: {
        type: NumberConstructor;
        default: number;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideOnSinglePage: {
        type: BooleanConstructor;
        default: boolean;
    };
    simple: {
        type: BooleanConstructor;
        default: boolean;
    };
    showTotal: {
        type: BooleanConstructor;
        default: boolean;
    };
    showMore: {
        type: BooleanConstructor;
        default: boolean;
    };
    showJumper: {
        type: BooleanConstructor;
        default: boolean;
    };
    showPageSize: {
        type: BooleanConstructor;
        default: boolean;
    };
    pageSizeOptions: {
        type: PropType<number[]>;
        default: () => number[];
    };
    pageSizeProps: {
        type: PropType<any>;
    };
    size: {
        type: PropType<"small" | "mini" | "medium" | "large">;
        default: () => "small" | "mini" | "medium" | "large";
    };
    pageItemStyle: {
        type: PropType<CSSProperties>;
    };
    activePageItemStyle: {
        type: PropType<CSSProperties>;
    };
    baseSize: {
        type: NumberConstructor;
        default: number;
    };
    bufferSize: {
        type: NumberConstructor;
        default: number;
    };
    onChange: {
        type: PropType<EmitType<(value: number) => void>>;
    };
    onPageSizeChange: {
        type: PropType<EmitType<(value: number) => void>>;
    };
}, () => JSX.Element | null, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("change" | "pageSizeChange" | "update:current" | "update:pageSize")[], "change" | "pageSizeChange" | "update:current" | "update:pageSize", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    total?: unknown;
    current?: unknown;
    defaultCurrent?: unknown;
    pageSize?: unknown;
    defaultPageSize?: unknown;
    disabled?: unknown;
    hideOnSinglePage?: unknown;
    simple?: unknown;
    showTotal?: unknown;
    showMore?: unknown;
    showJumper?: unknown;
    showPageSize?: unknown;
    pageSizeOptions?: unknown;
    pageSizeProps?: unknown;
    size?: unknown;
    pageItemStyle?: unknown;
    activePageItemStyle?: unknown;
    baseSize?: unknown;
    bufferSize?: unknown;
    onChange?: unknown;
    onPageSizeChange?: unknown;
} & {
    disabled: boolean;
    size: "small" | "mini" | "medium" | "large";
    total: number;
    defaultCurrent: number;
    defaultPageSize: number;
    hideOnSinglePage: boolean;
    simple: boolean;
    showTotal: boolean;
    showMore: boolean;
    showJumper: boolean;
    showPageSize: boolean;
    pageSizeOptions: number[];
    baseSize: number;
    bufferSize: number;
} & {
    onChange?: EmitType<(value: number) => void> | undefined;
    current?: number | undefined;
    onPageSizeChange?: EmitType<(value: number) => void> | undefined;
    pageSize?: number | undefined;
    pageSizeProps?: unknown;
    pageItemStyle?: CSSProperties | undefined;
    activePageItemStyle?: CSSProperties | undefined;
}> & {
    onChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:current"?: ((...args: any[]) => any) | undefined;
    onPageSizeChange?: ((...args: any[]) => any) | undefined;
    "onUpdate:pageSize"?: ((...args: any[]) => any) | undefined;
}, {
    disabled: boolean;
    size: "small" | "mini" | "medium" | "large";
    defaultCurrent: number;
    defaultPageSize: number;
    hideOnSinglePage: boolean;
    simple: boolean;
    showTotal: boolean;
    showMore: boolean;
    showJumper: boolean;
    showPageSize: boolean;
    pageSizeOptions: number[];
    baseSize: number;
    bufferSize: number;
}>;
export default _default;
