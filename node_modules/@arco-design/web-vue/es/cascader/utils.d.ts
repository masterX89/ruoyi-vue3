import { Ref } from 'vue';
import { CascaderOption, CascaderOptionInfo } from './interface';
export declare const getOptionInfos: (options: CascaderOption[], { optionMap, leafOptionMap, leafOptionValueMap, leafOptionSet, totalLevel: innerLevel, checkStrictly, enabledLazyLoad, lazyLoadOptions, }: {
    optionMap: Map<string, CascaderOptionInfo>;
    leafOptionMap: Map<string, CascaderOptionInfo>;
    leafOptionValueMap: Map<string | number, CascaderOptionInfo>;
    leafOptionSet: Set<CascaderOptionInfo>;
    totalLevel: Ref<number>;
    checkStrictly: Ref<boolean>;
    enabledLazyLoad: boolean;
    lazyLoadOptions: Record<string, CascaderOption[]>;
}) => CascaderOptionInfo[];
export declare const getCheckedStatus: (option: CascaderOptionInfo, computedKeys: string[]) => {
    checked: boolean;
    indeterminate: boolean;
};
export declare const getLeafOptionKeys: (option: CascaderOptionInfo) => string[];
export declare const getKeysFromValue: (value: string | number | Array<string | number> | undefined | (string | number | Array<string | number>)[], { pathMode, leafOptionMap, leafOptionValueMap, }: {
    pathMode: boolean;
    leafOptionMap: Map<string | number, CascaderOptionInfo>;
    leafOptionValueMap: Map<string | number, CascaderOptionInfo>;
}) => string[];
