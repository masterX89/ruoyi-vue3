import { RenderFunction } from 'vue';
export interface OptionData {
    value: string | number;
    label: string;
    render?: RenderFunction;
    disabled?: boolean;
    tagProps?: any;
    [other: string]: any;
}
export interface GroupOption {
    isGroup: true;
    label: string;
    options: Option[];
    [other: string]: any;
}
export declare type Option = string | number | OptionData | GroupOption;
export interface OptionInfo extends OptionData {
    index: number;
    key: string;
    origin: 'options' | 'extraOptions';
}
export declare type OptionNode = (OptionData & {
    key: string;
}) | (GroupOption & {
    options: OptionNode[];
    key: string;
});
export declare type FilterOption = boolean | ((inputValue: string, optionInfo: OptionInfo) => boolean);
