import type { App, RenderFunction } from 'vue';
export interface ArcoOptions {
    classPrefix?: string;
    componentPrefix?: string;
}
export interface ArcoIconOptions {
    iconPrefix?: string;
}
export interface ArcoGlobalConfig {
    classPrefix?: string;
}
export declare type BaseType = string | number;
export declare type Data = Record<string, any>;
export declare type RenderContent = string | RenderFunction;
export declare type EmitType<T> = T | T[];
export declare type SFCWithInstall<T, D = Record<string, never>> = T & D & {
    install: (app: App, opt?: ArcoOptions) => void;
};
export declare type ClassName = string | Array<ClassName> | Record<string, boolean>;
export interface ValueData {
    value: string | number;
    label: string;
    closable?: boolean;
    [other: string]: any;
}
export declare type AnimationDuration = number | {
    enter: number;
    leave: number;
};
