"use strict";
var vue = require("vue");
var globalConfig = require("../_utils/global-config.js");
var iconHover = require("../_components/icon-hover.js");
var index = require("../icon/icon-close/index.js");
var is = require("../_utils/is.js");
var pluginVue_exportHelper = require("../_virtual/plugin-vue_export-helper");
const _sfc_main = vue.defineComponent({
  name: "TabsTab",
  components: {
    IconHover: iconHover,
    IconClose: index
  },
  props: {
    tab: {
      type: Object,
      required: true
    },
    isActive: {
      type: Boolean,
      default: false
    },
    editable: Boolean
  },
  emits: ["click", "delete"],
  setup(props, { emit }) {
    const prefixCls = globalConfig.getPrefixCls("tabs-tab");
    const handleClick = (e) => {
      if (!props.tab.disabled) {
        emit("click", props.tab.key, e);
      }
    };
    const handleDelete = (e) => {
      if (!props.tab.disabled) {
        emit("delete", props.tab.key, e);
      }
    };
    const cls = vue.computed(() => [
      prefixCls,
      {
        [`${prefixCls}-active`]: props.isActive,
        [`${prefixCls}-closable`]: props.tab.closable,
        [`${prefixCls}-disabled`]: props.tab.disabled
      }
    ]);
    const showCloseBtn = vue.computed(() => {
      if (is.isBoolean(props.tab.closable)) {
        return props.tab.closable;
      }
      return props.editable;
    });
    return {
      prefixCls,
      cls,
      showCloseBtn,
      handleClick,
      handleDelete
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_icon_close = vue.resolveComponent("icon-close");
  const _component_icon_hover = vue.resolveComponent("icon-hover");
  return vue.openBlock(), vue.createElementBlock("div", {
    class: vue.normalizeClass(_ctx.cls),
    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))
  }, [
    vue.createElementVNode("span", {
      class: vue.normalizeClass(`${_ctx.prefixCls}-title`)
    }, [
      vue.renderSlot(_ctx.$slots, "title")
    ], 2),
    _ctx.editable && _ctx.tab.closable ? (vue.openBlock(), vue.createElementBlock("span", {
      key: 0,
      class: vue.normalizeClass(`${_ctx.prefixCls}-close-btn`),
      onClick: _cache[0] || (_cache[0] = vue.withModifiers((...args) => _ctx.handleDelete && _ctx.handleDelete(...args), ["stop"]))
    }, [
      vue.createVNode(_component_icon_hover, null, {
        default: vue.withCtx(() => [
          vue.createVNode(_component_icon_close)
        ]),
        _: 1
      })
    ], 2)) : vue.createCommentVNode("v-if", true)
  ], 2);
}
var Tab = /* @__PURE__ */ pluginVue_exportHelper(_sfc_main, [["render", _sfc_render]]);
module.exports = Tab;
