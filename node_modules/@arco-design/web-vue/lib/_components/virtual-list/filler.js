"use strict";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var vue = require("vue");
var pluginVue_exportHelper = require("../../_virtual/plugin-vue_export-helper");
const _sfc_main = vue.defineComponent({
  name: "VirtualListFiller",
  props: {
    height: {
      type: Number
    },
    offset: {
      type: Number
    },
    disabled: {
      type: Boolean
    }
  },
  setup(props) {
    const { height, offset } = vue.toRefs(props);
    const outerStyle = vue.computed(() => offset.value !== void 0 ? {
      height: `${height.value}px`,
      position: "relative",
      overflow: "hidden",
      zIndex: 0
    } : {});
    const innerStyle = vue.computed(() => {
      const commonStyle = {
        display: "flex",
        flexDirection: "column"
      };
      return offset.value !== void 0 ? __spreadProps(__spreadValues({}, commonStyle), {
        transform: `translateY(${offset.value}px)`,
        position: "absolute",
        left: 0,
        right: 0,
        top: 0
      }) : commonStyle;
    });
    return {
      outerStyle,
      innerStyle
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return !_ctx.disabled ? (vue.openBlock(), vue.createElementBlock("div", {
    key: 0,
    style: vue.normalizeStyle(_ctx.outerStyle)
  }, [
    vue.createElementVNode("div", {
      style: vue.normalizeStyle(_ctx.innerStyle)
    }, [
      vue.renderSlot(_ctx.$slots, "default")
    ], 4)
  ], 4)) : vue.renderSlot(_ctx.$slots, "default", { key: 1 });
}
var Filler = /* @__PURE__ */ pluginVue_exportHelper(_sfc_main, [["render", _sfc_render]]);
module.exports = Filler;
